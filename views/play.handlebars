<style>
    .banned {
        pointer-events: none;
    }
    .free {
        pointer-events: auto;
    }
</style>
        <form action="/start" method="post" class="home">
            <input type="text" name="username" value="{{username}}" style="display: none;">
            <button class="button-1"><i class="fa-solid fa-house"></i></button>
        </form>
<div id="app">
    <form action="/result" method="post" id="myForm">
        {{#each pool}}
            <div class="wrapper" v-show="show({{ addOne @index}})">
                <div class="q-word">
                    {{ addOne @index}}.
                    {{this.question}}
                </div>
                <br>
                <input class="inputs" type="text" name={{this.id}} @keydown.enter.prevent="next($event)" autofocus index="{{ addOne @index}}" autocomplete="off">
            </div>
            <input class="counts" type="text" value="{{this.id}}" name="questionId" style="display: none;">
        {{/each}}
        <input type="text" name="time" style="display: none;">
        <input type="text" name="unit" value="{{unit}}" style="display: none;">
        <input type="checkbox" name="strict" id="strict" value="0">
        <label for="strict">Case Insensitive</label>
    </form>
    <div>
        <button class="button-1" @click="last" id="last" disabled>Last</button>
        <button class="button-1" @click="next" id="next" autofocus>Next</button>
    </div>
    
</div>
    <script>
        const app = Vue.createApp({
            data () {
                return {
                    index: 1,
                    timeStamps: [new Date().getTime()],
                    diffs: []
                }
            },
            watch: {
                index: "changeBtn"
            },
            methods: {
                show(id) {
                    if (id == this.index) {
                        return true
                    } else {
                        return false
                    }
                },
                last() {
                        this.index--;
                },
                getTimeStamp() {
                        let timeStamp = new Date().getTime();
                        let timeInput = document.querySelector("input[name='time']");
                        let diff = timeStamp - this.timeStamps[this.index-1];
                        this.timeStamps.push(timeStamp);
                        diff = diff.toString();
                        this.diffs[this.index-1] = diff;
                        console.log(this.diffs);
                        timeInput.value = this.diffs;
                },
                next(event) {
                    let counts = document.querySelectorAll(".counts");
                    
                    this.getTimeStamp();
                    if (this.index < counts.length) {
                        this.index++;
                        let idx = this.index;
                        let selector = "input[index='" + idx + "']";
                        setTimeout(function(){
                            let inputs = document.querySelector(selector);
                            inputs.focus();
                        }, 100);
                        let strict = document.querySelector('input[name="strict"]');
                        console.log(strict);
                    } else {
                        let myForm = document.querySelector("#myForm");
                        myForm.submit();
                    }
                },
                changeBtn() {
                    let counts = document.querySelectorAll(".counts");
                    let last = document.querySelector("#last");
                    let next = document.querySelector("#next");
                    if (this.index==1) {
                        last.disabled = true;
                        next.innerHTML = 'Next';
                    } else if (this.index==counts.length) {
                        next.innerHTML = 'Submit';
                    } else {
                        last.disabled = false;
                        next.innerHTML = 'Next';
                    }
                }
            }
        });
        app.mount("#app");
    </script>